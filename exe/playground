#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'logger'
require 'optparse'
require 'tree_stand'
require 'tree_stand/cli'

$stdout.sync = $stderr.sync = true

program = TreeStand::Cli::Options.new
OptionParser.new do |parser|
  program.define_options(parser)
  parser.on('-w', '--[no-]watch', "use watch(1) to continuously print matches, by default entr is used if it's available", TrueClass) do |watch|
    program.watch = watch
  end

  parser.parse!(ARGV)
end
program.check!

# ls -1 SOURCE QUERY |
#   entr -c exe/print_matches
#     --source SOURCE
#     --query QUERY
#     --parser PARSER
def entr_cmd(source, query, parser)
  [
    'ls', '-1', source, query, '|',
    'entr', '-c',
    'exe/print_matches',
    '--source', source,
    '--query', query,
    '--parser', parser,
  ].join(' ')
end

# watch 'exe/print_matches --source SOURCE --query QUERY --parser PARSER'
def watch_cmd(source, query, parser)
  [
    'watch',
    "'exe/print_matches --source #{source} --query #{query} --parser #{parser}'",
  ].join(' ')
end

def main(program)
  cmd = if system('which', 'entr') && !program.watch
    entr_cmd(program.source_file, program.query_file, program.parser_file)
  else
    watch_cmd(program.source_file, program.query_file, program.parser_file)
  end

  program.logger.debug("Running `#{cmd}`")
  exec(cmd)
end

main(program)
